Good morning! Here's your coding interview problem for today.

This problem was asked by Google.

A quack is a data structure combining properties of both stacks and queues. It
can be viewed as a list of elements written left to right such that three
operations are possible:

 * push(x): add a new item x to the left end of the list
 * pop(): remove and return the item on the left end of the list
 * pull(): remove the item on the right end of the list.

Implement a quack using three stacks and O(1) additional memory, so that the
amortized time for any push, pop, or pull operation is O(1).


--------------------------------------------------------------------------------

Upgrade to premium
[https://www.dailycodingproblem.com/subscribe?email=mishravishal958%40gmail.com&ref=csdojo] 
and get in-depth solutions to every problem, including this one. Since you were
referred by one of our affiliates, you'll get a 10% discount on checkout!

If you liked this problem, feel free to forward it along so they can subscribe
here [https://www.dailycodingproblem.com/]! As always, shoot us an email if
there's anything we can help with!


--------------------------------------------------------------------------------

Practice makes perfect. Book a mock interview with a FAANG-level interviewer
[https://www.tryexponent.com/coaching?ref=DCP&promo_code=DCPCOACH] today from
our friends at Exponent (10% off!).

System design interviews are becoming more popular in SWE interviews. Here's how
to prepare.
[https://www.tryexponent.com/courses/system-design-interview?ref=DCP&promo_code=DCP]


--------------------------------------------------------------------------------

No more? Snooze or unsubscribe
[https://dailycodingproblem.com/unsubscribe?unsubscribeKey=c5ae6a38585c7eaa09f0d49f11f3d7c2f718630c5141670a65cddcd4a35cc0a5e9a43881]
.