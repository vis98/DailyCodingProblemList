Good morning! Here's your coding interview problem for today.

This problem was asked by Apple.

Suppose you have a multiplication table that is N by N. That is, a 2D array
where the value at the i-th row and j-th column is (i + 1) * (j + 1) (if
0-indexed) or i * j (if 1-indexed).

Given integers N and X, write a function that returns the number of times X
appears as a value in an N by N multiplication table.

For example, given N = 6 and X = 12, you should return 4, since the
multiplication table looks like this:

| 1 | 2 | 3 | 4 | 5 | 6 |

| 2 | 4 | 6 | 8 | 10 | 12 |

| 3 | 6 | 9 | 12 | 15 | 18 |

| 4 | 8 | 12 | 16 | 20 | 24 |

| 5 | 10 | 15 | 20 | 25 | 30 |

| 6 | 12 | 18 | 24 | 30 | 36 |

And there are 4 12's in the table.


--------------------------------------------------------------------------------

Upgrade to premium
[https://www.dailycodingproblem.com/subscribe?email=mishravishal958%40gmail.com&ref=csdojo] 
and get in-depth solutions to every problem, including this one. Since you were
referred by one of our affiliates, you'll get a 10% discount on checkout!

If you liked this problem, feel free to forward it along so they can subscribe
here [https://www.dailycodingproblem.com/]! As always, shoot us an email if
there's anything we can help with!


--------------------------------------------------------------------------------

Practice makes perfect. Book a mock interview with a FAANG-level interviewer
[https://www.tryexponent.com/coaching?ref=DCP&promo_code=DCPCOACH] today from
our friends at Exponent (10% off!).

System design interviews are becoming more popular in SWE interviews. Here's how
to prepare.
[https://www.tryexponent.com/courses/system-design-interview?ref=DCP&promo_code=DCP]


--------------------------------------------------------------------------------

No more? Snooze or unsubscribe
[https://dailycodingproblem.com/unsubscribe?unsubscribeKey=c5ae6a38585c7eaa09f0d49f11f3d7c2f718630c5141670a65cddcd4a35cc0a5e9a43881]
.