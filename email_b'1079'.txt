Good morning! Here's your coding interview problem for today.

This problem was asked by Google.

PageRank is an algorithm used by Google to rank the importance of different
websites. While there have been changes over the years, the central idea is to
assign each site a score based on the importance of other pages that link to
that page.

More mathematically, suppose there are N sites, and each site i has a certain
count Ci of outgoing links. Then the score for a particular site Sj is defined
as :

score(Sj) = (1 - d) / N + d * (score(Sx) / Cx+ score(Sy) / Cy+ ... + score(Sz) /
Cz))

Here, Sx, Sy, ..., Sz denote the scores of all the other sites that have
outgoing links to Sj, and d is a damping factor, usually set to around 0.85,
used to model the probability that a user will stop searching.

Given a directed graph of links between various websites, write a program that
calculates each site's page rank.


--------------------------------------------------------------------------------

Upgrade to premium
[https://www.dailycodingproblem.com/subscribe?email=mishravishal958%40gmail.com&ref=csdojo] 
and get in-depth solutions to every problem, including this one. Since you were
referred by one of our affiliates, you'll get a 10% discount on checkout!

If you liked this problem, feel free to forward it along so they can subscribe
here [https://www.dailycodingproblem.com/]! As always, shoot us an email if
there's anything we can help with!


--------------------------------------------------------------------------------

Interested in Data Science or Product Management? Check out our other
newsletters, Data Science Prep [https://datascienceprep.com/?ref=dcp] and Daily
Product Prep [https://dailyproductprep.com/]!


--------------------------------------------------------------------------------

No more? Snooze or unsubscribe
[https://dailycodingproblem.com/unsubscribe?unsubscribeKey=c5ae6a38585c7eaa09f0d49f11f3d7c2f718630c5141670a65cddcd4a35cc0a5e9a43881]
.